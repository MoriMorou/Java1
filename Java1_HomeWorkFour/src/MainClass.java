public class MainClass {

    public static void main(String[] argn) {
/*    1. Создать класс "Сотрудник" с полями: ФИО, должность, телефон, зарплата, возраст;
      2. Конструктор класса должен заполнять эти поля при создании объекта;
      3. Внутри класса «Сотрудник» написать методы, которые возвращают значение каждого поля;
      4. Вывести при помощи методов из пункта 3 ФИО и должность.
      5. Создать массив из 5 сотрудников. С помощью цикла вывести информацию только о сотрудниках старше 40 лет;
      6. * Создать метод, повышающий зарплату всем сотрудникам старше 45 лет на 5000.
      7. ** Написать методы (принимающие на вход массив сотрудников), вычисляющие средний возраст и среднюю зарплату сотрудников, вывести результаты работы в консоль.
      8. *** Продумать конструктор таким образом, чтобы при создании каждому сотруднику присваивался личный уникальный идентификационный порядковый номер
*/
        // Задание 4
        Employee em01 = new Employee("Sargan Sara", "doctor", 89035293088l, 34000, 45);


        System.out.println("Вывести при помощи методов из пункта 3 ФИО и должность. Имя: " + em01.getName() + ", должность: " + em01.getPosition());

        // Задание 5
        Employee[] staff = new Employee[5];
        staff[0] = new Employee("Petrov Petor", "manager", 9685002020l, 35000, 47);
        staff[1] = new Employee("Petrov Stepan", "boss", 9686003030l, 555000, 43);
        staff[2] = new Employee("Petrov Mikko", "supirvisor", 9687004040l, 35000, 27);
        staff[3] = new Employee("Petrov Leva", "director", 9684005050l, 35000, 60);
        staff[4] = new Employee("Petrov Foma", "techical support", 9681009090l, 65000, 35);



        for (int i = 1; i < staff.length; i++) {
            if (staff[i].getAge() > 40) {
                System.out.println("List of staff: " + " " + staff[i].getFullInfo());
            }
        }

/*
        for (Employee i : staff) {
            if (i.getAge() > 40)
                i.getFullInfo(); // по другому вывести данные не могу
        } */
    }
}
